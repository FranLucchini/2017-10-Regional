# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1 - solutions/correct/Main.java]
  # Use sample data as test
  1 ; copy statement/sample-1.in
  1 ; copy statement/sample-2.in

  # Random tests
  3 ; random.py3 10 900 1000
  3 ; random.py3 20 900 1000
  3 ; random.py3 30 900 1000
  3 ; random.py3 40 900 1000
  3 ; random.py3 50 900 1000
  3 ; random.py3 60 900 1000
  3 ; random.py3 70 900 1000
  3 ; random.py3 80 900 1000
  3 ; random.py3 90 900 1000
  3 ; random.py3 100 900 1000
  3 ; random.py3 10 1000 1000
  3 ; random.py3 20 1000 1000
  3 ; random.py3 30 1000 1000
  3 ; random.py3 40 1000 1000
  3 ; random.py3 50 1000 1000
  3 ; random.py3 60 1000 1000
  3 ; random.py3 70 1000 1000
  3 ; random.py3 80 1000 1000
  3 ; random.py3 90 1000 1000
  3 ; random.py3 100 1000 1000
  3 ; random.py3 100 1000 1000 1
  3 ; random.py3 100 1000 1000 2
  3 ; random.py3 100 1000 1000 3
  3 ; random.py3 100 1000 1000 4
  3 ; random.py3 100 1000 1000 5



[Subtask 2 - solutions/correct/Main.java]
  # Random tests
  1 ; random.py3 10 900 1000
  1 ; random.py3 20 900 1000
  1 ; random.py3 30 900 1000
  1 ; random.py3 40 900 1000
  1 ; random.py3 50 900 1000
  1 ; random.py3 60 900 1000
  1 ; random.py3 70 900 1000
  1 ; random.py3 80 900 1000
  1 ; random.py3 90 900 1000
  1 ; random.py3 100 900 1000
  1 ; random.py3 10 1000 1000
  1 ; random.py3 20 1000 1000
  1 ; random.py3 30 1000 1000
  1 ; random.py3 40 1000 1000
  1 ; random.py3 50 1000 1000
  1 ; random.py3 60 1000 1000
  1 ; random.py3 70 1000 1000
  1 ; random.py3 80 1000 1000
  1 ; random.py3 90 1000 1000
  1 ; random.py3 100 1000 1000 1
  1 ; random.py3 100 1000 1000 2
  1 ; random.py3 100 1000 1000 3
  1 ; random.py3 100 1000 1000 4
  1 ; random.py3 100 1000 1000 5


