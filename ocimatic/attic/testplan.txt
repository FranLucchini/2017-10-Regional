# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic gen-input`


[Subtask 1 - validators/st1.cpp]
  g ; generator.py 0 1 1
  g ; generator.py 0 2 1
  g ; generator.py 0 3 1
  g ; generator.py 0 4 1


[Subtask 2 - validators/st2.cpp]
  g ; generator.py 0 4 1
  g ; generator.py 0 5 1
  g ; generator.py 0 1 4
  g ; generator.py 0 2 4
  g ; generator.py 0 3 4
  g ; generator.py 0 4 4
  g ; generator.py 0 5 4
  g ; generator.py 0 1 5
  g ; generator.py 0 2 5
  g ; generator.py 0 3 5
  g ; generator.py 0 4 5
  g ; generator.py 0 5 5


[Subtask 3 - validators/st3.cpp]
  g ; generator.py 0 4 1
  g ; generator.py 0 5 1
  g ; generator.py 0 6 1
  g ; generator.py 0 1 6
  g ; generator.py 0 2 6
  g ; generator.py 0 1 7
  g ; generator.py 0 2 7
  g ; generator.py 0 5 5
  g ; generator.py 0 9 4
  g ; generator.py 0 9 5
  g ; generator.py 0 9 6
  g ; generator.py 0 9 7
  g ; generator.py 0 10 4
  g ; generator.py 0 10 5
  g ; generator.py 0 10 6
  g ; generator.py 0 10 7


[Subtask 4 - validators/st4.cpp]
  g ; generator.py 1 100000 7
  g ; generator.py 2 100000 7
  g ; generator.py 3 100000 7
  g ; generator.py 4 100000 7
  g ; generator.py 5 100000 7
  g ; generator.py 6 100000 7
  g ; generator.py 7 100000 7
  g ; generator.py 0 100000 1
  g ; generator.py 0 100000 2
  g ; generator.py 0 100000 3
  g ; generator.py 0 100000 4
  g ; generator.py 0 100000 5
  g ; generator.py 0 100000 6
  g ; generator.py 0 100000 7


[Subtask 5 - validators/st5.cpp]
  g ; generator.py 1 10000000000 7
  g ; generator.py 2 10000000000 7
  g ; generator.py 3 10000000000 7
  g ; generator.py 4 10000000000 7
  g ; generator.py 5 10000000000 7
  g ; generator.py 6 10000000000 7
  g ; generator.py 7 10000000000 7
  g ; generator.py 0 10000000000 1
  g ; generator.py 0 10000000000 2
  g ; generator.py 0 10000000000 3
  g ; generator.py 0 10000000000 4
  g ; generator.py 0 10000000000 5
  g ; generator.py 0 10000000000 6
  g ; generator.py 0 10000000000 7

